/** Services.Packages.Package DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `PaGetByApKe`;
GO

DROP PROCEDURE IF EXISTS `PaGetByApKePaged`;
GO

DROP PROCEDURE IF EXISTS `PaGetByApKeCount`;
GO

DROP PROCEDURE IF EXISTS `PaGetByOw`;
GO

DROP PROCEDURE IF EXISTS `PaGetByOwPaged`;
GO

DROP PROCEDURE IF EXISTS `PaGetByOwCount`;
GO


DROP PROCEDURE IF EXISTS `PaSeByPaNa`;
GO

DROP PROCEDURE IF EXISTS `PaSeByPaNaPaged`;
GO

DROP PROCEDURE IF EXISTS `PaSeByPaNaCount`;
GO


DROP PROCEDURE IF EXISTS `PaSeByPaNaFoApKe`;
GO

DROP PROCEDURE IF EXISTS `PaSeByPaNaFoApKePaged`;
GO

DROP PROCEDURE IF EXISTS `PaSeByPaNaFoApKeCount`;
GO

/** Services.Packages.LocalPackage DROP Relation SPs **/


DROP PROCEDURE IF EXISTS `LoPaSeByPaNa`;
GO

DROP PROCEDURE IF EXISTS `LoPaSeByPaNaPaged`;
GO

DROP PROCEDURE IF EXISTS `LoPaSeByPaNaCount`;
GO


/** Services.Packages.ApiKey DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `ApKeGetByCu`;
GO

DROP PROCEDURE IF EXISTS `ApKeGetByCuPaged`;
GO

DROP PROCEDURE IF EXISTS `ApKeGetByCuCount`;
GO

DROP PROCEDURE IF EXISTS `ApKeGetByOw`;
GO

DROP PROCEDURE IF EXISTS `ApKeGetByOwPaged`;
GO

DROP PROCEDURE IF EXISTS `ApKeGetByOwCount`;
GO


DROP PROCEDURE IF EXISTS `ApKeSeByCoIn`;
GO

DROP PROCEDURE IF EXISTS `ApKeSeByCoInPaged`;
GO

DROP PROCEDURE IF EXISTS `ApKeSeByCoInCount`;
GO


DROP PROCEDURE IF EXISTS `ApKeSeByCoInOnCu`;
GO

DROP PROCEDURE IF EXISTS `ApKeSeByCoInOnCuPaged`;
GO

DROP PROCEDURE IF EXISTS `ApKeSeByCoInOnCuCount`;
GO

/** Services.Packages.Log.ApplicationException DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `ApExGetByApKe`;
GO

DROP PROCEDURE IF EXISTS `ApExGetByApKePaged`;
GO

DROP PROCEDURE IF EXISTS `ApExGetByApKeCount`;
GO

DROP PROCEDURE IF EXISTS `ApExGetByPaEx`;
GO

DROP PROCEDURE IF EXISTS `ApExGetByPaExPaged`;
GO

DROP PROCEDURE IF EXISTS `ApExGetByPaExCount`;
GO

DROP PROCEDURE IF EXISTS `ApExGetByOw`;
GO

DROP PROCEDURE IF EXISTS `ApExGetByOwPaged`;
GO

DROP PROCEDURE IF EXISTS `ApExGetByOwCount`;
GO


DROP PROCEDURE IF EXISTS `ApExSeByNa`;
GO

DROP PROCEDURE IF EXISTS `ApExSeByNaPaged`;
GO

DROP PROCEDURE IF EXISTS `ApExSeByNaCount`;
GO

DROP PROCEDURE IF EXISTS `ApExSeByNaSo`;
GO

DROP PROCEDURE IF EXISTS `ApExSeByNaSoPaged`;
GO

DROP PROCEDURE IF EXISTS `ApExSeByNaSoCount`;
GO


DROP PROCEDURE IF EXISTS `ApExSeByNaOnApKe`;
GO

DROP PROCEDURE IF EXISTS `ApExSeByNaOnApKePaged`;
GO

DROP PROCEDURE IF EXISTS `ApExSeByNaOnApKeCount`;
GO

DROP PROCEDURE IF EXISTS `ApExSeByNaSoOnApKe`;
GO

DROP PROCEDURE IF EXISTS `ApExSeByNaSoOnApKePaged`;
GO

DROP PROCEDURE IF EXISTS `ApExSeByNaSoOnApKeCount`;
GO

/** Services.Packages.Customer DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `CuGetByPa`;
GO

DROP PROCEDURE IF EXISTS `CuGetByPaPaged`;
GO

DROP PROCEDURE IF EXISTS `CuGetByPaCount`;
GO

DROP PROCEDURE IF EXISTS `CuGetByOw`;
GO

DROP PROCEDURE IF EXISTS `CuGetByOwPaged`;
GO

DROP PROCEDURE IF EXISTS `CuGetByOwCount`;
GO


DROP PROCEDURE IF EXISTS `CuSeByNaAnPa`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaAnPaPaged`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaAnPaCount`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNa`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaPaged`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaCount`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaAnPaPa`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaAnPaPaPaged`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaAnPaPaCount`;
GO


DROP PROCEDURE IF EXISTS `CuSeByNaOnPa`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaOnPaPaged`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaOnPaCount`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaAnPaOnPa`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaAnPaOnPaPaged`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaAnPaOnPaCount`;
GO

/** Services.Packages.CustomerUserEntry DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `CuUsEnGetByUsLo`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnGetByUsLoPaged`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnGetByUsLoCount`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnGetByCu`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnGetByCuPaged`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnGetByCuCount`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnGetByOw`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnGetByOwPaged`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnGetByOwCount`;
GO



/** Services.Packages.Purchase DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `PuGetByApKe`;
GO

DROP PROCEDURE IF EXISTS `PuGetByApKePaged`;
GO

DROP PROCEDURE IF EXISTS `PuGetByApKeCount`;
GO

DROP PROCEDURE IF EXISTS `PuGetByCl`;
GO

DROP PROCEDURE IF EXISTS `PuGetByClPaged`;
GO

DROP PROCEDURE IF EXISTS `PuGetByClCount`;
GO

DROP PROCEDURE IF EXISTS `PuGetByOw`;
GO

DROP PROCEDURE IF EXISTS `PuGetByOwPaged`;
GO

DROP PROCEDURE IF EXISTS `PuGetByOwCount`;
GO


DROP PROCEDURE IF EXISTS `PuGeAl`;
GO

DROP PROCEDURE IF EXISTS `PuGeAlPaged`;
GO

DROP PROCEDURE IF EXISTS `PuGeAlCount`;
GO


/** Services.Packages.PurchaseLine DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `PuLiGetByPuOr`;
GO

DROP PROCEDURE IF EXISTS `PuLiGetByPuOrPaged`;
GO

DROP PROCEDURE IF EXISTS `PuLiGetByPuOrCount`;
GO

DROP PROCEDURE IF EXISTS `PuLiGetByOw`;
GO

DROP PROCEDURE IF EXISTS `PuLiGetByOwPaged`;
GO

DROP PROCEDURE IF EXISTS `PuLiGetByOwCount`;
GO



/** Services.Packages.Security.ModelUser DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `MoUsGetByOw`;
GO

DROP PROCEDURE IF EXISTS `MoUsGetByOwPaged`;
GO

DROP PROCEDURE IF EXISTS `MoUsGetByOwCount`;
GO


DROP PROCEDURE IF EXISTS `MoUsSeByNa`;
GO

DROP PROCEDURE IF EXISTS `MoUsSeByNaPaged`;
GO

DROP PROCEDURE IF EXISTS `MoUsSeByNaCount`;
GO

DROP PROCEDURE IF EXISTS `MoUsSeByEm`;
GO

DROP PROCEDURE IF EXISTS `MoUsSeByEmPaged`;
GO

DROP PROCEDURE IF EXISTS `MoUsSeByEmCount`;
GO

DROP PROCEDURE IF EXISTS `MoUsSeEnByNaAnEm`;
GO

DROP PROCEDURE IF EXISTS `MoUsSeEnByNaAnEmPaged`;
GO

DROP PROCEDURE IF EXISTS `MoUsSeEnByNaAnEmCount`;
GO


/** Services.Packages.Security.ModelSession DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `MoSeGetByUs`;
GO

DROP PROCEDURE IF EXISTS `MoSeGetByUsPaged`;
GO

DROP PROCEDURE IF EXISTS `MoSeGetByUsCount`;
GO



/** Services.Packages.Security.ModelUserRights DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `MoUsRiGetByUs`;
GO

DROP PROCEDURE IF EXISTS `MoUsRiGetByUsPaged`;
GO

DROP PROCEDURE IF EXISTS `MoUsRiGetByUsCount`;
GO


DROP PROCEDURE IF EXISTS `MoUsRiGeByNa`;
GO

DROP PROCEDURE IF EXISTS `MoUsRiGeByNaPaged`;
GO

DROP PROCEDURE IF EXISTS `MoUsRiGeByNaCount`;
GO


DROP PROCEDURE IF EXISTS `MoUsRiGeByNaAnUs`;
GO

DROP PROCEDURE IF EXISTS `MoUsRiGeByNaAnUsPaged`;
GO

DROP PROCEDURE IF EXISTS `MoUsRiGeByNaAnUsCount`;
GO

/** Services.Packages.Security.Securable DROP Relation SPs **/



/** Services.Packages.Security.IPRegistered DROP Relation SPs **/



/** Services.Packages.Security.IPSessionRegistration DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `IPSeReGetByIP`;
GO

DROP PROCEDURE IF EXISTS `IPSeReGetByIPPaged`;
GO

DROP PROCEDURE IF EXISTS `IPSeReGetByIPCount`;
GO

DROP PROCEDURE IF EXISTS `IPSeReGetBySe`;
GO

DROP PROCEDURE IF EXISTS `IPSeReGetBySePaged`;
GO

DROP PROCEDURE IF EXISTS `IPSeReGetBySeCount`;
GO



/** Services.Packages.Security.PackageAccessControlList DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `PaAcCoLiGetByUs`;
GO

DROP PROCEDURE IF EXISTS `PaAcCoLiGetByUsPaged`;
GO

DROP PROCEDURE IF EXISTS `PaAcCoLiGetByUsCount`;
GO

DROP PROCEDURE IF EXISTS `PaAcCoLiGetByPa`;
GO

DROP PROCEDURE IF EXISTS `PaAcCoLiGetByPaPaged`;
GO

DROP PROCEDURE IF EXISTS `PaAcCoLiGetByPaCount`;
GO



DROP PROCEDURE IF EXISTS `PaAcCoLiGeACLs`;
GO

DROP PROCEDURE IF EXISTS `PaAcCoLiGeACLsPaged`;
GO

DROP PROCEDURE IF EXISTS `PaAcCoLiGeACLsCount`;
GO

/** Services.Packages.Security.PackageAccessControlEntry DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `PaAcCoEnGetByACL`;
GO

DROP PROCEDURE IF EXISTS `PaAcCoEnGetByACLPaged`;
GO

DROP PROCEDURE IF EXISTS `PaAcCoEnGetByACLCount`;
GO



DROP PROCEDURE IF EXISTS `PaAcCoEnGeEn`;
GO

DROP PROCEDURE IF EXISTS `PaAcCoEnGeEnPaged`;
GO

DROP PROCEDURE IF EXISTS `PaAcCoEnGeEnCount`;
GO

/** Services.Packages.Security.ApiKeyAccessControlList DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `ApKeAcCoLiGetByUs`;
GO

DROP PROCEDURE IF EXISTS `ApKeAcCoLiGetByUsPaged`;
GO

DROP PROCEDURE IF EXISTS `ApKeAcCoLiGetByUsCount`;
GO

DROP PROCEDURE IF EXISTS `ApKeAcCoLiGetByApKe`;
GO

DROP PROCEDURE IF EXISTS `ApKeAcCoLiGetByApKePaged`;
GO

DROP PROCEDURE IF EXISTS `ApKeAcCoLiGetByApKeCount`;
GO



DROP PROCEDURE IF EXISTS `ApKeAcCoLiGeACLs`;
GO

DROP PROCEDURE IF EXISTS `ApKeAcCoLiGeACLsPaged`;
GO

DROP PROCEDURE IF EXISTS `ApKeAcCoLiGeACLsCount`;
GO

/** Services.Packages.Security.ApiKeyAccessControlEntry DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `ApKeAcCoEnGetByACL`;
GO

DROP PROCEDURE IF EXISTS `ApKeAcCoEnGetByACLPaged`;
GO

DROP PROCEDURE IF EXISTS `ApKeAcCoEnGetByACLCount`;
GO



DROP PROCEDURE IF EXISTS `ApKeAcCoEnGeEn`;
GO

DROP PROCEDURE IF EXISTS `ApKeAcCoEnGeEnPaged`;
GO

DROP PROCEDURE IF EXISTS `ApKeAcCoEnGeEnCount`;
GO

/** Services.Packages.Log.Security.ApplicationExceptionAccessControlList DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `ApExAcCoLiGetByUs`;
GO

DROP PROCEDURE IF EXISTS `ApExAcCoLiGetByUsPaged`;
GO

DROP PROCEDURE IF EXISTS `ApExAcCoLiGetByUsCount`;
GO

DROP PROCEDURE IF EXISTS `ApExAcCoLiGetByApEx`;
GO

DROP PROCEDURE IF EXISTS `ApExAcCoLiGetByApExPaged`;
GO

DROP PROCEDURE IF EXISTS `ApExAcCoLiGetByApExCount`;
GO



DROP PROCEDURE IF EXISTS `ApExAcCoLiGeACLs`;
GO

DROP PROCEDURE IF EXISTS `ApExAcCoLiGeACLsPaged`;
GO

DROP PROCEDURE IF EXISTS `ApExAcCoLiGeACLsCount`;
GO

/** Services.Packages.Log.Security.ApplicationExceptionAccessControlEntry DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `ApExAcCoEnGetByACL`;
GO

DROP PROCEDURE IF EXISTS `ApExAcCoEnGetByACLPaged`;
GO

DROP PROCEDURE IF EXISTS `ApExAcCoEnGetByACLCount`;
GO



DROP PROCEDURE IF EXISTS `ApExAcCoEnGeEn`;
GO

DROP PROCEDURE IF EXISTS `ApExAcCoEnGeEnPaged`;
GO

DROP PROCEDURE IF EXISTS `ApExAcCoEnGeEnCount`;
GO

/** Services.Packages.Security.CustomerAccessControlList DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `CuAcCoLiGetByUs`;
GO

DROP PROCEDURE IF EXISTS `CuAcCoLiGetByUsPaged`;
GO

DROP PROCEDURE IF EXISTS `CuAcCoLiGetByUsCount`;
GO

DROP PROCEDURE IF EXISTS `CuAcCoLiGetByCu`;
GO

DROP PROCEDURE IF EXISTS `CuAcCoLiGetByCuPaged`;
GO

DROP PROCEDURE IF EXISTS `CuAcCoLiGetByCuCount`;
GO



DROP PROCEDURE IF EXISTS `CuAcCoLiGeACLs`;
GO

DROP PROCEDURE IF EXISTS `CuAcCoLiGeACLsPaged`;
GO

DROP PROCEDURE IF EXISTS `CuAcCoLiGeACLsCount`;
GO

/** Services.Packages.Security.CustomerAccessControlEntry DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `CuAcCoEnGetByACL`;
GO

DROP PROCEDURE IF EXISTS `CuAcCoEnGetByACLPaged`;
GO

DROP PROCEDURE IF EXISTS `CuAcCoEnGetByACLCount`;
GO



DROP PROCEDURE IF EXISTS `CuAcCoEnGeEn`;
GO

DROP PROCEDURE IF EXISTS `CuAcCoEnGeEnPaged`;
GO

DROP PROCEDURE IF EXISTS `CuAcCoEnGeEnCount`;
GO

/** Services.Packages.Security.CustomerUserEntryAccessControlList DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `CuUsEnAcCoLiGetByUs`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnAcCoLiGetByUsPaged`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnAcCoLiGetByUsCount`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnAcCoLiGetByCuUsEn`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnAcCoLiGetByCuUsEnPaged`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnAcCoLiGetByCuUsEnCount`;
GO



DROP PROCEDURE IF EXISTS `CuUsEnAcCoLiGeACLs`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnAcCoLiGeACLsPaged`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnAcCoLiGeACLsCount`;
GO

/** Services.Packages.Security.CustomerUserEntryAccessControlEntry DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `CuUsEnAcCoEnGetByACL`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnAcCoEnGetByACLPaged`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnAcCoEnGetByACLCount`;
GO



DROP PROCEDURE IF EXISTS `CuUsEnAcCoEnGeEn`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnAcCoEnGeEnPaged`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnAcCoEnGeEnCount`;
GO

/** Services.Packages.Security.PurchaseAccessControlList DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `PuAcCoLiGetByUs`;
GO

DROP PROCEDURE IF EXISTS `PuAcCoLiGetByUsPaged`;
GO

DROP PROCEDURE IF EXISTS `PuAcCoLiGetByUsCount`;
GO

DROP PROCEDURE IF EXISTS `PuAcCoLiGetByPu`;
GO

DROP PROCEDURE IF EXISTS `PuAcCoLiGetByPuPaged`;
GO

DROP PROCEDURE IF EXISTS `PuAcCoLiGetByPuCount`;
GO



DROP PROCEDURE IF EXISTS `PuAcCoLiGeACLs`;
GO

DROP PROCEDURE IF EXISTS `PuAcCoLiGeACLsPaged`;
GO

DROP PROCEDURE IF EXISTS `PuAcCoLiGeACLsCount`;
GO

/** Services.Packages.Security.PurchaseAccessControlEntry DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `PuAcCoEnGetByACL`;
GO

DROP PROCEDURE IF EXISTS `PuAcCoEnGetByACLPaged`;
GO

DROP PROCEDURE IF EXISTS `PuAcCoEnGetByACLCount`;
GO



DROP PROCEDURE IF EXISTS `PuAcCoEnGeEn`;
GO

DROP PROCEDURE IF EXISTS `PuAcCoEnGeEnPaged`;
GO

DROP PROCEDURE IF EXISTS `PuAcCoEnGeEnCount`;
GO

/** Services.Packages.Security.PurchaseLineAccessControlList DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `PuLiAcCoLiGetByUs`;
GO

DROP PROCEDURE IF EXISTS `PuLiAcCoLiGetByUsPaged`;
GO

DROP PROCEDURE IF EXISTS `PuLiAcCoLiGetByUsCount`;
GO

DROP PROCEDURE IF EXISTS `PuLiAcCoLiGetByPuLi`;
GO

DROP PROCEDURE IF EXISTS `PuLiAcCoLiGetByPuLiPaged`;
GO

DROP PROCEDURE IF EXISTS `PuLiAcCoLiGetByPuLiCount`;
GO



DROP PROCEDURE IF EXISTS `PuLiAcCoLiGeACLs`;
GO

DROP PROCEDURE IF EXISTS `PuLiAcCoLiGeACLsPaged`;
GO

DROP PROCEDURE IF EXISTS `PuLiAcCoLiGeACLsCount`;
GO

/** Services.Packages.Security.PurchaseLineAccessControlEntry DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `PuLiAcCoEnGetByACL`;
GO

DROP PROCEDURE IF EXISTS `PuLiAcCoEnGetByACLPaged`;
GO

DROP PROCEDURE IF EXISTS `PuLiAcCoEnGetByACLCount`;
GO



DROP PROCEDURE IF EXISTS `PuLiAcCoEnGeEn`;
GO

DROP PROCEDURE IF EXISTS `PuLiAcCoEnGeEnPaged`;
GO

DROP PROCEDURE IF EXISTS `PuLiAcCoEnGeEnCount`;
GO

/** Services.Packages.Security.Security.ModelUserAccessControlList DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `MoUsAcCoLiGetByUs`;
GO

DROP PROCEDURE IF EXISTS `MoUsAcCoLiGetByUsPaged`;
GO

DROP PROCEDURE IF EXISTS `MoUsAcCoLiGetByUsCount`;
GO

DROP PROCEDURE IF EXISTS `MoUsAcCoLiGetByMoUs`;
GO

DROP PROCEDURE IF EXISTS `MoUsAcCoLiGetByMoUsPaged`;
GO

DROP PROCEDURE IF EXISTS `MoUsAcCoLiGetByMoUsCount`;
GO



DROP PROCEDURE IF EXISTS `MoUsAcCoLiGeACLs`;
GO

DROP PROCEDURE IF EXISTS `MoUsAcCoLiGeACLsPaged`;
GO

DROP PROCEDURE IF EXISTS `MoUsAcCoLiGeACLsCount`;
GO

/** Services.Packages.Security.Security.ModelUserAccessControlEntry DROP Relation SPs **/

DROP PROCEDURE IF EXISTS `MoUsAcCoEnGetByACL`;
GO

DROP PROCEDURE IF EXISTS `MoUsAcCoEnGetByACLPaged`;
GO

DROP PROCEDURE IF EXISTS `MoUsAcCoEnGetByACLCount`;
GO



DROP PROCEDURE IF EXISTS `MoUsAcCoEnGeEn`;
GO

DROP PROCEDURE IF EXISTS `MoUsAcCoEnGeEnPaged`;
GO

DROP PROCEDURE IF EXISTS `MoUsAcCoEnGeEnCount`;
GO

/** Platform.Module.UndoRedo.Services.Packages.UndoRedoOptions DROP Relation SPs **/


DROP PROCEDURE IF EXISTS `UnReOpSeByEnTy`;
GO

DROP PROCEDURE IF EXISTS `UnReOpSeByEnTyPaged`;
GO

DROP PROCEDURE IF EXISTS `UnReOpSeByEnTyCount`;
GO


/** Platform.Module.UndoRedo.Services.Packages.UndoRedoGroup DROP Relation SPs **/


DROP PROCEDURE IF EXISTS `UnReGrSeByEnTy`;
GO

DROP PROCEDURE IF EXISTS `UnReGrSeByEnTyPaged`;
GO

DROP PROCEDURE IF EXISTS `UnReGrSeByEnTyCount`;
GO


/** Services.Packages.CustomerUndoRedo DROP Relation SPs **/


DROP PROCEDURE IF EXISTS `CuUnReGeAlFiByIsUn`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlFiByIsUnPaged`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlFiByIsUnCount`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlFiByIsUnOpOr`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlFiByIsUnOpOrPaged`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlFiByIsUnOpOrCount`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlWiNoFiOpSo`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlWiNoFiOpSoPaged`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlWiNoFiOpSoCount`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlWiNoFi`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlWiNoFiPaged`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlWiNoFiCount`;
GO


/** Services.Packages.PurchaseUndoRedo DROP Relation SPs **/


DROP PROCEDURE IF EXISTS `PuUnReGeAlFiByIsUn`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlFiByIsUnPaged`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlFiByIsUnCount`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlFiByIsUnOpOr`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlFiByIsUnOpOrPaged`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlFiByIsUnOpOrCount`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlWiNoFiOpSo`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlWiNoFiOpSoPaged`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlWiNoFiOpSoCount`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlWiNoFi`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlWiNoFiPaged`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlWiNoFiCount`;
GO


/** Services.Packages.PurchaseLineUndoRedo DROP Relation SPs **/


DROP PROCEDURE IF EXISTS `PuLiUnReGeAlFiByIsUn`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlFiByIsUnPaged`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlFiByIsUnCount`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlFiByIsUnOpOr`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlFiByIsUnOpOrPaged`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlFiByIsUnOpOrCount`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlWiNoFiOpSo`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlWiNoFiOpSoPaged`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlWiNoFiOpSoCount`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlWiNoFi`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlWiNoFiPaged`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlWiNoFiCount`;
GO


/** Services.Packages.Package DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `PaCreate`;
GO

DROP PROCEDURE IF EXISTS `PaDelete`;
GO

DROP PROCEDURE IF EXISTS `PaRead`;
GO

DROP PROCEDURE IF EXISTS `PaUpdate`;
GO

DROP PROCEDURE IF EXISTS `PaSeByPaNa`;
GO

DROP PROCEDURE IF EXISTS `PaSeByPaNaPaged`;
GO

DROP PROCEDURE IF EXISTS `PaSeByPaNaCount`;
GO

/** Services.Packages.LocalPackage DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `LoPaCreate`;
GO

DROP PROCEDURE IF EXISTS `LoPaDelete`;
GO

DROP PROCEDURE IF EXISTS `LoPaRead`;
GO

DROP PROCEDURE IF EXISTS `LoPaUpdate`;
GO

DROP PROCEDURE IF EXISTS `LoPaSeByPaNa`;
GO

DROP PROCEDURE IF EXISTS `LoPaSeByPaNaPaged`;
GO

DROP PROCEDURE IF EXISTS `LoPaSeByPaNaCount`;
GO

/** Services.Packages.ApiKey DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `ApKeCreate`;
GO

DROP PROCEDURE IF EXISTS `ApKeDelete`;
GO

DROP PROCEDURE IF EXISTS `ApKeRead`;
GO

DROP PROCEDURE IF EXISTS `ApKeUpdate`;
GO

DROP PROCEDURE IF EXISTS `ApKeSeByCoIn`;
GO

DROP PROCEDURE IF EXISTS `ApKeSeByCoInPaged`;
GO

DROP PROCEDURE IF EXISTS `ApKeSeByCoInCount`;
GO

/** Services.Packages.Log.ApplicationException DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `ApExCreate`;
GO

DROP PROCEDURE IF EXISTS `ApExDelete`;
GO

DROP PROCEDURE IF EXISTS `ApExRead`;
GO

DROP PROCEDURE IF EXISTS `ApExUpdate`;
GO

DROP PROCEDURE IF EXISTS `ApExSeByNa`;
GO

DROP PROCEDURE IF EXISTS `ApExSeByNaPaged`;
GO

DROP PROCEDURE IF EXISTS `ApExSeByNaCount`;
GO

DROP PROCEDURE IF EXISTS `ApExSeByNaSo`;
GO

DROP PROCEDURE IF EXISTS `ApExSeByNaSoPaged`;
GO

DROP PROCEDURE IF EXISTS `ApExSeByNaSoCount`;
GO

/** Services.Packages.Customer DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `CuCreate`;
GO

DROP PROCEDURE IF EXISTS `CuDelete`;
GO

DROP PROCEDURE IF EXISTS `CuRead`;
GO

DROP PROCEDURE IF EXISTS `CuUpdate`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaAnPa`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaAnPaPaged`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaAnPaCount`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNa`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaPaged`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaCount`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaAnPaPa`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaAnPaPaPaged`;
GO

DROP PROCEDURE IF EXISTS `CuSeByNaAnPaPaCount`;
GO

/** Services.Packages.CustomerUserEntry DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `CuUsEnCreate`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnDelete`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnRead`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnUpdate`;
GO

/** Services.Packages.Purchase DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `PuCreate`;
GO

DROP PROCEDURE IF EXISTS `PuDelete`;
GO

DROP PROCEDURE IF EXISTS `PuRead`;
GO

DROP PROCEDURE IF EXISTS `PuUpdate`;
GO

DROP PROCEDURE IF EXISTS `PuGeAl`;
GO

DROP PROCEDURE IF EXISTS `PuGeAlPaged`;
GO

DROP PROCEDURE IF EXISTS `PuGeAlCount`;
GO

/** Services.Packages.PurchaseLine DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `PuLiCreate`;
GO

DROP PROCEDURE IF EXISTS `PuLiDelete`;
GO

DROP PROCEDURE IF EXISTS `PuLiRead`;
GO

DROP PROCEDURE IF EXISTS `PuLiUpdate`;
GO

/** Services.Packages.Security.ModelUser DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `MoUsCreate`;
GO

DROP PROCEDURE IF EXISTS `MoUsDelete`;
GO

DROP PROCEDURE IF EXISTS `MoUsRead`;
GO

DROP PROCEDURE IF EXISTS `MoUsUpdate`;
GO

DROP PROCEDURE IF EXISTS `MoUsSeByNa`;
GO

DROP PROCEDURE IF EXISTS `MoUsSeByNaPaged`;
GO

DROP PROCEDURE IF EXISTS `MoUsSeByNaCount`;
GO

DROP PROCEDURE IF EXISTS `MoUsSeByEm`;
GO

DROP PROCEDURE IF EXISTS `MoUsSeByEmPaged`;
GO

DROP PROCEDURE IF EXISTS `MoUsSeByEmCount`;
GO

DROP PROCEDURE IF EXISTS `MoUsSeEnByNaAnEm`;
GO

DROP PROCEDURE IF EXISTS `MoUsSeEnByNaAnEmPaged`;
GO

DROP PROCEDURE IF EXISTS `MoUsSeEnByNaAnEmCount`;
GO

/** Services.Packages.Security.ModelSession DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `MoSeCreate`;
GO

DROP PROCEDURE IF EXISTS `MoSeDelete`;
GO

DROP PROCEDURE IF EXISTS `MoSeRead`;
GO

DROP PROCEDURE IF EXISTS `MoSeUpdate`;
GO

/** Services.Packages.Security.ModelUserRights DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `MoUsRiCreate`;
GO

DROP PROCEDURE IF EXISTS `MoUsRiDelete`;
GO

DROP PROCEDURE IF EXISTS `MoUsRiRead`;
GO

DROP PROCEDURE IF EXISTS `MoUsRiUpdate`;
GO

DROP PROCEDURE IF EXISTS `MoUsRiGeByNa`;
GO

DROP PROCEDURE IF EXISTS `MoUsRiGeByNaPaged`;
GO

DROP PROCEDURE IF EXISTS `MoUsRiGeByNaCount`;
GO

/** Services.Packages.Security.Securable DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `SeCreate`;
GO

DROP PROCEDURE IF EXISTS `SeDelete`;
GO

DROP PROCEDURE IF EXISTS `SeRead`;
GO

DROP PROCEDURE IF EXISTS `SeUpdate`;
GO

/** Services.Packages.Security.IPRegistered DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `IPReCreate`;
GO

DROP PROCEDURE IF EXISTS `IPReDelete`;
GO

DROP PROCEDURE IF EXISTS `IPReRead`;
GO

DROP PROCEDURE IF EXISTS `IPReUpdate`;
GO

/** Services.Packages.Security.IPSessionRegistration DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `IPSeReCreate`;
GO

DROP PROCEDURE IF EXISTS `IPSeReDelete`;
GO

DROP PROCEDURE IF EXISTS `IPSeReRead`;
GO

DROP PROCEDURE IF EXISTS `IPSeReUpdate`;
GO

/** Services.Packages.Security.PackageAccessControlList DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `PaAcCoLiCreate`;
GO

DROP PROCEDURE IF EXISTS `PaAcCoLiDelete`;
GO

DROP PROCEDURE IF EXISTS `PaAcCoLiRead`;
GO

DROP PROCEDURE IF EXISTS `PaAcCoLiUpdate`;
GO

/** Services.Packages.Security.PackageAccessControlEntry DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `PaAcCoEnCreate`;
GO

DROP PROCEDURE IF EXISTS `PaAcCoEnDelete`;
GO

DROP PROCEDURE IF EXISTS `PaAcCoEnRead`;
GO

DROP PROCEDURE IF EXISTS `PaAcCoEnUpdate`;
GO

/** Services.Packages.Security.ApiKeyAccessControlList DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `ApKeAcCoLiCreate`;
GO

DROP PROCEDURE IF EXISTS `ApKeAcCoLiDelete`;
GO

DROP PROCEDURE IF EXISTS `ApKeAcCoLiRead`;
GO

DROP PROCEDURE IF EXISTS `ApKeAcCoLiUpdate`;
GO

/** Services.Packages.Security.ApiKeyAccessControlEntry DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `ApKeAcCoEnCreate`;
GO

DROP PROCEDURE IF EXISTS `ApKeAcCoEnDelete`;
GO

DROP PROCEDURE IF EXISTS `ApKeAcCoEnRead`;
GO

DROP PROCEDURE IF EXISTS `ApKeAcCoEnUpdate`;
GO

/** Services.Packages.Log.Security.ApplicationExceptionAccessControlList DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `ApExAcCoLiCreate`;
GO

DROP PROCEDURE IF EXISTS `ApExAcCoLiDelete`;
GO

DROP PROCEDURE IF EXISTS `ApExAcCoLiRead`;
GO

DROP PROCEDURE IF EXISTS `ApExAcCoLiUpdate`;
GO

/** Services.Packages.Log.Security.ApplicationExceptionAccessControlEntry DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `ApExAcCoEnCreate`;
GO

DROP PROCEDURE IF EXISTS `ApExAcCoEnDelete`;
GO

DROP PROCEDURE IF EXISTS `ApExAcCoEnRead`;
GO

DROP PROCEDURE IF EXISTS `ApExAcCoEnUpdate`;
GO

/** Services.Packages.Security.CustomerAccessControlList DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `CuAcCoLiCreate`;
GO

DROP PROCEDURE IF EXISTS `CuAcCoLiDelete`;
GO

DROP PROCEDURE IF EXISTS `CuAcCoLiRead`;
GO

DROP PROCEDURE IF EXISTS `CuAcCoLiUpdate`;
GO

/** Services.Packages.Security.CustomerAccessControlEntry DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `CuAcCoEnCreate`;
GO

DROP PROCEDURE IF EXISTS `CuAcCoEnDelete`;
GO

DROP PROCEDURE IF EXISTS `CuAcCoEnRead`;
GO

DROP PROCEDURE IF EXISTS `CuAcCoEnUpdate`;
GO

/** Services.Packages.Security.CustomerUserEntryAccessControlList DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `CuUsEnAcCoLiCreate`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnAcCoLiDelete`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnAcCoLiRead`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnAcCoLiUpdate`;
GO

/** Services.Packages.Security.CustomerUserEntryAccessControlEntry DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `CuUsEnAcCoEnCreate`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnAcCoEnDelete`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnAcCoEnRead`;
GO

DROP PROCEDURE IF EXISTS `CuUsEnAcCoEnUpdate`;
GO

/** Services.Packages.Security.PurchaseAccessControlList DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `PuAcCoLiCreate`;
GO

DROP PROCEDURE IF EXISTS `PuAcCoLiDelete`;
GO

DROP PROCEDURE IF EXISTS `PuAcCoLiRead`;
GO

DROP PROCEDURE IF EXISTS `PuAcCoLiUpdate`;
GO

/** Services.Packages.Security.PurchaseAccessControlEntry DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `PuAcCoEnCreate`;
GO

DROP PROCEDURE IF EXISTS `PuAcCoEnDelete`;
GO

DROP PROCEDURE IF EXISTS `PuAcCoEnRead`;
GO

DROP PROCEDURE IF EXISTS `PuAcCoEnUpdate`;
GO

/** Services.Packages.Security.PurchaseLineAccessControlList DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `PuLiAcCoLiCreate`;
GO

DROP PROCEDURE IF EXISTS `PuLiAcCoLiDelete`;
GO

DROP PROCEDURE IF EXISTS `PuLiAcCoLiRead`;
GO

DROP PROCEDURE IF EXISTS `PuLiAcCoLiUpdate`;
GO

/** Services.Packages.Security.PurchaseLineAccessControlEntry DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `PuLiAcCoEnCreate`;
GO

DROP PROCEDURE IF EXISTS `PuLiAcCoEnDelete`;
GO

DROP PROCEDURE IF EXISTS `PuLiAcCoEnRead`;
GO

DROP PROCEDURE IF EXISTS `PuLiAcCoEnUpdate`;
GO

/** Services.Packages.Security.Security.ModelUserAccessControlList DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `MoUsAcCoLiCreate`;
GO

DROP PROCEDURE IF EXISTS `MoUsAcCoLiDelete`;
GO

DROP PROCEDURE IF EXISTS `MoUsAcCoLiRead`;
GO

DROP PROCEDURE IF EXISTS `MoUsAcCoLiUpdate`;
GO

/** Services.Packages.Security.Security.ModelUserAccessControlEntry DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `MoUsAcCoEnCreate`;
GO

DROP PROCEDURE IF EXISTS `MoUsAcCoEnDelete`;
GO

DROP PROCEDURE IF EXISTS `MoUsAcCoEnRead`;
GO

DROP PROCEDURE IF EXISTS `MoUsAcCoEnUpdate`;
GO

/** Platform.Module.UndoRedo.Services.Packages.UndoRedoOptions DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `UnReOpCreate`;
GO

DROP PROCEDURE IF EXISTS `UnReOpDelete`;
GO

DROP PROCEDURE IF EXISTS `UnReOpRead`;
GO

DROP PROCEDURE IF EXISTS `UnReOpUpdate`;
GO

DROP PROCEDURE IF EXISTS `UnReOpSeByEnTy`;
GO

DROP PROCEDURE IF EXISTS `UnReOpSeByEnTyPaged`;
GO

DROP PROCEDURE IF EXISTS `UnReOpSeByEnTyCount`;
GO

/** Platform.Module.UndoRedo.Services.Packages.UndoRedoGroup DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `UnReGrCreate`;
GO

DROP PROCEDURE IF EXISTS `UnReGrDelete`;
GO

DROP PROCEDURE IF EXISTS `UnReGrRead`;
GO

DROP PROCEDURE IF EXISTS `UnReGrUpdate`;
GO

DROP PROCEDURE IF EXISTS `UnReGrSeByEnTy`;
GO

DROP PROCEDURE IF EXISTS `UnReGrSeByEnTyPaged`;
GO

DROP PROCEDURE IF EXISTS `UnReGrSeByEnTyCount`;
GO

/** Services.Packages.CustomerUndoRedo DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `CuUnReCreate`;
GO

DROP PROCEDURE IF EXISTS `CuUnReDelete`;
GO

DROP PROCEDURE IF EXISTS `CuUnReRead`;
GO

DROP PROCEDURE IF EXISTS `CuUnReUpdate`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlFiByIsUn`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlFiByIsUnPaged`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlFiByIsUnCount`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlFiByIsUnOpOr`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlFiByIsUnOpOrPaged`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlFiByIsUnOpOrCount`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlWiNoFiOpSo`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlWiNoFiOpSoPaged`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlWiNoFiOpSoCount`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlWiNoFi`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlWiNoFiPaged`;
GO

DROP PROCEDURE IF EXISTS `CuUnReGeAlWiNoFiCount`;
GO

/** Services.Packages.PurchaseUndoRedo DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `PuUnReCreate`;
GO

DROP PROCEDURE IF EXISTS `PuUnReDelete`;
GO

DROP PROCEDURE IF EXISTS `PuUnReRead`;
GO

DROP PROCEDURE IF EXISTS `PuUnReUpdate`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlFiByIsUn`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlFiByIsUnPaged`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlFiByIsUnCount`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlFiByIsUnOpOr`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlFiByIsUnOpOrPaged`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlFiByIsUnOpOrCount`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlWiNoFiOpSo`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlWiNoFiOpSoPaged`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlWiNoFiOpSoCount`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlWiNoFi`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlWiNoFiPaged`;
GO

DROP PROCEDURE IF EXISTS `PuUnReGeAlWiNoFiCount`;
GO

/** Services.Packages.PurchaseLineUndoRedo DROP CRUD sp's **/
DROP PROCEDURE IF EXISTS `PuLiUnReCreate`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReDelete`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReRead`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReUpdate`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlFiByIsUn`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlFiByIsUnPaged`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlFiByIsUnCount`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlFiByIsUnOpOr`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlFiByIsUnOpOrPaged`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlFiByIsUnOpOrCount`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlWiNoFiOpSo`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlWiNoFiOpSoPaged`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlWiNoFiOpSoCount`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlWiNoFi`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlWiNoFiPaged`;
GO

DROP PROCEDURE IF EXISTS `PuLiUnReGeAlWiNoFiCount`;
GO

